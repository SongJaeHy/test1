이클립스 
- 편집기(코드 작성 툴)
- workspace -> project -> src(~.java) : 개발자가 아는 언어
						  bin(~.class): 자바를 실행하는 기계(JVM) 아는 언어(byte code)
 
패키지(package)
- 코드를 기능단위 구분
- 작성한 코드를 다른 사람이 작성한 것과 충돌나는 것을 막는다.
- 회사 도메인을 활용한다.(com.naver.프로젝트명.기능...)
- 자바의 클래스 이름은 패키지이름을 포함한다.
  예> package day01.class01;
      class Test {}
     JVM 관리하는 클래스 이름 : day01.class01.Test  
     
     package day01.class02;
      class Test {}
      
변수
- 타입 + 이름
- 한개의 값만을 담는다.
- 값의 대입을 할 때 "=" 을 사용

타입       
- 기본형(8가지) : 소문자로 시작, 미리 정해져 있음, 추가 불가능
  : 숫자형
    - 정수 : byte, short, int(기본), long(파일, 시간)
    - 실수 : float, double(기본)
  : 문자형 - char, 'a'
  : 논리형 - boolean, true, false
- 참조형(기본형 8가지를 제외한 모든 타입은 참조형)      
  : 값을 만드는 방식
  : new 키워드 사용    
  
  int String(참조형) float boolean      
  String int(기본형) Long Float    Long a = new Long(..)
      
연산자
: 산술연산자(+, -, *, /, %)
  - 정수 / 정수 = 정수
  - 정수 / 실수 = 실수
: 비교연산자(결과가 true, false)
  - >, <, >=, <=, ==, !=
: 증감연산자
  - ++, --
  - 연산자의 위치에 따라 결과가 달라질수 있다.
    예> int a = 5;
        int b = ++a;(b는 6)   int b = a++;(b는 5)
: 논리연산자
  - &&, ||, !(부정)
: 배정연산자
  - +=, -=, *= ,,..
: 조건연산자(삼항연산자)
  -  조건항 ? 값(참일경우선택) : 값(거짓일경우선택) 

조건 제어문
if (조건문) {

}
if (조건문) {
	참일 경우 실행
} else {
	거짓일 경우 실행
}
if (조건문) {
	참일 경우 실행
} else if (조건문) {
  참일 경우 실행
} else if (조건문) {
  참일 경우 실행
} else {
  위의 모든 조건을 만족하지 않는 경우	
}

동등 비교시 사용
수식과 case 뒤의 값이 같은 경우를 찾는다.
switch (수식) {
	case 값1:   수식 == 값1
	   break;  switch문을 빠져 나온다.
	case 값2:   수식 == 값2
	   break;  switch문을 빠져 나온다.
	case 값3:
	   break;  switch문을 빠져 나온다.
	default:   
	   위의 모든 case가 일치하지 않는 경우
}

반복 제어문
for
- 반복의 정해져 있는 경우 사용
- for(1. 초기값; 2. 조건문; 3. 증감) {
      4.반복문이 참일 경우 처리할 일
      
      반복문을 벗어나고 싶을때 : break;
      현재 반복을 스킵할때 : continue;
  } 
while
- 반복의 범위가 정해져 있지않은 경우 사용
- while (조건문) {
     조건이 참일 경우 실행문장
  }


do~while(조건문)

do {
	실행할 문장;
} while(조건문);

int a = 10;
do {
	System.out.println("a는 홀수다");
} while (a < 5);







     
      
      
      
      
      